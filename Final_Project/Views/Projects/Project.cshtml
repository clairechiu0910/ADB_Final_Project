@using Final_Project.Models
@model Final_Project.Models.Project
@using Microsoft.AspNetCore.Http;
@{
    var uid = Context.Session.GetString("UID");
}

<div class="wrapper">
    <div class="profile-background">
        <div class="filter-black">
            <h3>@Model.Title</h3>
        </div>
    </div>
    <div class="profile-content section-nude">
        <div class="container">
            <div class="row owner">
                <!--<div class="col-md-2 col-md-offset-5 col-sm-4 col-sm-offset-4 col-xs-6 col-xs-offset-3 text-left">-->
                <div class="Equipment Schedule">
                    <span style="float: right;margin: 30px 0 15px;">
                        <button style="margin-right:10px;" onclick="Join()" class="btn">Join</button>
                        <button style="margin-right:10px;" onclick="InterestAllTargets()" class="btn btn-danger">Interested in All Targets</button>
                        @{
                            if (uid == Model.PI)
                            {
                                <button style="margin-right:10px;" onclick="ViewEquipments()" class="btn btn-Primary">View Equipments</button>
                                <button onclick="Edit()" class="btn btn-info">Edit</button>
                            }
                        }
                    </span>
                </div>
                <!--</div>-->
                <!--<div class="col-md-2 col-md-offset-5 col-sm-4 col-sm-offset-4 col-xs-6 col-xs-offset-3 text-left">-->


                <div id="app_projects">
                    <div class="row">
                        <div class="col-sm-5">
                            <h4>@Model.Description</h4>
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-sm-5">
                            <h6>Type: @Model.Project_type </h6>
                            <h6>Aperture Range: @Model.ApertureLowerLimit ~ @Model.ApertureUpperLimit</h6>
                            <h6>FoV Range: @Model.FoVLowerLimit ~ @Model.FoVUpperLimit</h6>
                            <h6>Pixel Scale Range (/pix): @Model.PixelScaleLowerLimit ~ @Model.PixelScaleUpperLimit</h6>
                        </div>
                        <div class="col-sm-5">
                            <h6>Mount type (german, fork, theodolite): @Model.MountType</h6>
                            <h6>Camera type (colored, mono): @Model.CameraType_1</h6>
                            <h6>Camera type (cooled, uncooled): @Model.CameraType_2</h6>
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-sm-5">
                            <h6>Johnson B: @Model.Johnson_B</h6>
                            <h6>Johnson V: @Model.Johnson_V</h6>
                            <h6>Johnson R: @Model.Johnson_R</h6>
                        </div>
                        <div class="col-sm-5">
                            <h6>SDSS u: @Model.SDSS_u</h6>
                            <h6>SDSS g: @Model.SDSS_g</h6>
                            <h6>SDSS r: @Model.SDSS_r</h6>
                            <h6>SDSS i: @Model.SDSS_i</h6>
                            <h6>SDSS j: @Model.SDSS_i</h6>
                        </div>

                    </div>

                    <hr />

                    <h4>Project Manager</h4>
                    <div class="row">
                        <div class="col-sm-5">
                            <h5>Name: {{manager.name}}</h5>
                            <h6>{{manager.email}}</h6>
                        </div>
                        <div class="col-sm-3">
                            <h6>Country: {{manager.country}}</h6>
                            <h6>Title: {{manager.title}}</h6>
                            <h6>Affiliation: {{manager.affiliation}}</h6>
                        </div>
                    </div>

                    <hr />

                    <h4>Project Targets</h4>
                    <div style="overflow-x:auto;">
                        @{
                            if (uid == Model.PI)
                            {
                                <button onclick="AddTarget()" class="btn btn-warning btn-sm" style="margin-bottom:1%">Add Other Target</button>
                            }
                        }
                        <table class="table2">
                            <tr class="d-flex">
                                <th style="width:20px!important;">TID</th>
                                <th>Name</th>
                                <th>RA</th>
                                <th>Dec</th>
                                <th>Comptability<br />Score</th>
                                <th>Viewable</th>
                                <th>Interest</th>
                            </tr>
                            <tr v-for="target in targets" :key="target.tid">
                                <td style="width:20px!important;">{{target.tid}}</td>
                                <td>{{target.name}}</td>
                                <td class="text-right number">{{target.ra}}</td>
                                <td class="text-right number">{{target.dec}}</td>
                                <td class="text-right number">{{target.score}}</td>
                                <td v-if="target.end===''" class="text-right number">{{target.start}}</td>
                                <td v-if="target.end!=''" class="text-right number">{{target.start}} - <br />{{target.end}}</td>
                                <td>
                                    <button v-on:click="InterestTarget(target.tid)" class="btn btn-success">Interested</button>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    fetch('@Html.Raw(Url.Action("GetProjectTargets", "Projects", new { pid = Model.PID, uid = uid}))')
        .then(function (response) {
            response.json().then(function (data) {
                app_projects._data.targets = data;
                console.log(app_projects._data.targets);
            });
        });

    fetch('@Html.Raw(Url.Action("GetProjectManager", "User", new { uid = Model.PI }))')
        .then(function (response) {
            response.json().then(function (data) {
                app_projects._data.manager = data;
                console.log(app_projects._data.manager);
            });
        });

    var app_projects = new Vue({
        el: '#app_projects',
        data: {
            targets: null,
            manager: null
        },
        methods: {
            InterestTarget: function (tid) {
                console.log(tid);
                location.href = '@Html.Raw(Url.Action("InterestTarget", "Projects", new { pid = Model.PID, tid = "TID" }))'.replace("TID", tid);
            }
        }
    });

    function Join() {
        console.log("in join");
        location.href = '@Url.Action("Join", "Projects", new { pid = Model.PID})';
    }

    function Edit() {
        console.log("in edit");
        location.href = '@Url.Action("Edit", "Projects", new { pid = Model.PID })';
    }

    function ViewEquipments() {
        console.log("in edit");
        location.href = '@Url.Action("ProjectEquipment", "Projects", new { pid = Model.PID })';
    }

    function InterestAllTargets() {
        console.log("in all targets");
        location.href = '@Url.Action("InterestAllTargets", "Projects", new { pid = Model.PID })';
    }

    function AddTarget() {
        console.log("in add targets");
        location.href = '@Url.Action("SelectTargets", "Targets", new { pid = Model.PID })';
    }
</script>
